

/**
 * Write a description of class StartScreen here.
 *
 * @author (your name)
 * @version (a version number or a date)
 */
import javax.swing.*;
import java.awt.Color;
import java.awt.event.*;
import java.awt.*;
import javax.swing.Timer;
public class EndScreen implements ActionListener
{
    private JFrame endScreen;
    private JButton restart;
    private JLabel text;
    GraphicsEnvironment graphics = GraphicsEnvironment.getLocalGraphicsEnvironment();
    GraphicsDevice device = graphics.getDefaultScreenDevice();
    JButton closeButton = new JButton("X");
    
    public EndScreen()
    {
        endScreen = new JFrame();
        endScreen.setExtendedState(JFrame.MAXIMIZED_BOTH); 
        endScreen.setLayout(null);
        endScreen.setVisible(true);
        
        int time = MakeGame.getTime();
        
        
        text = new JLabel("Game Over");
        text.setFont(new Font("Poppins", Font.BOLD, 92));
        text.setBounds(440, 50, 2000,200);
        endScreen.add(text);
        text = new JLabel("Time: " + time);
        text.setFont(new Font("Poppins", Font.BOLD, 60));
        text.setBounds(570, 125, 500,200);
        endScreen.add(text);
        
        restart = new JButton("Restart");
        restart.setBounds(500, 400, 400,300);
        restart.addActionListener(this);
        restart.setFont(new Font("Arial", Font.PLAIN, 48));
        endScreen.add(restart);
        device.setFullScreenWindow(endScreen);
        closeButton.setBackground(Color.RED);
        closeButton.setOpaque(true);
        closeButton.setBounds(0, 0, 80, 40);
        closeButton.addActionListener(this);
        
        closeButton.setBorder(null);
        endScreen.add(closeButton);
    }
    
    
    public void actionPerformed(ActionEvent e) 
    {
        if(e.getSource() == restart)
        {
            StartScreen start = new StartScreen();
            endScreen.setVisible(false);
        }
        if(e.getSource() == closeButton)
        {
            endScreen.dispose();
        }

    }
    
}
